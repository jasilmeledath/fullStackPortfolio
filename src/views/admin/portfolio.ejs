<%- include('partials/head') %>
<body class="bg-black text-green-400 font-mono overflow-x-hidden">
    <!-- First, add this right after the opening <body> tag -->
    <div id="toast-container" class="fixed top-4 right-4 z-50"></div>

    <!-- Matrix Background -->
    <canvas id="matrix-bg" class="fixed inset-0 z-0 opacity-20"></canvas>
    
    <!-- Main Container -->
    <div class="relative z-10 min-h-screen">
        <!-- Header -->
        <%- include('partials/header') %>
        
        <div class="container mx-auto px-4 py-8">
            <div class="grid grid-cols-1 lg:grid-cols-4 gap-6">
                <!-- Sidebar -->
                <%- include('partials/sidebar') %>
                <!-- Main Content -->
                <div class="lg:col-span-3 space-y-6">
                    <% /* Sections Accordion */ %>
                    <!-- Intro Section -->
                    <details class="bg-gray-900/50 border border-green-500/30 rounded-lg backdrop-blur-sm" open>
                        <summary class="cursor-pointer px-6 py-4 text-lg font-bold text-green-400 hover:text-cyan-400">
                            Intro Section
                        </summary>
                        <div class="p-6 space-y-4">
                            <!-- Existing Intro -->
                            <% if(intro) { %>
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                <div>
                                    <p><strong>Site Title:</strong> <%= intro.siteTitle %></p>
                                    <p><strong>Your Name:</strong> <%= intro.yourName %></p>
                                    <p><strong>Roles:</strong> <%= intro.roles.join(', ') %></p>
                                </div>
                                <div>
                                    <% if(intro.logoIcon){ %>
                                    <img src="/<%= intro.logoIcon %>" alt="Logo Icon" class="w-24 h-24 object-contain" />
                                    <% } %>
                                </div>
                            </div>
                            <% } %>

                            <!-- Add / Update Form -->
                            <form id="intro-form" class="space-y-4">
                                <div>
                                    <label class="block text-sm">Site Title / Logo Text<span class="text-red-500">*</span></label>
                                    <input type="text" name="siteTitle" value="<%= intro?.siteTitle || '' %>" required class="w-full bg-gray-800/60 border border-gray-700 rounded p-2 focus:outline-none focus:border-green-400" />
                                </div>
                                <div>
                                    <label class="block text-sm">Your Name<span class="text-red-500">*</span></label>
                                    <input type="text" name="yourName" value="<%= intro?.yourName || '' %>" required class="w-full bg-gray-800/60 border border-gray-700 rounded p-2 focus:outline-none focus:border-green-400" />
                                </div>
                                <div>
                                    <label class="block text-sm">Roles (comma separated)<span class="text-red-500">*</span></label>
                                    <input type="text" name="roles" value="<%= intro?.roles?.join(', ') || '' %>" required class="w-full bg-gray-800/60 border border-gray-700 rounded p-2 focus:outline-none focus:border-green-400" placeholder="e.g. Developer, Designer, Writer" />
                                </div>
                                <div>
                                    <label class="block text-sm">Logo Icon<span class="text-red-500">*</span></label>
                                    <input type="file" name="logoIcon" accept="image/*" class="w-full bg-gray-800/60 border border-gray-700 rounded p-2" onchange="previewImage(event, 'intro-logo-preview')" />
                                    <img id="intro-logo-preview" class="mt-2 w-20 h-20 object-contain hidden" />
                                </div>
                                <button type="button" id="updateIntroBtn" class="px-6 py-2 bg-green-600/20 border border-green-500 text-green-400 rounded hover:bg-green-600/40">
                                    <%= intro ? 'Update Intro' : 'Add Intro' %>
                                </button>
                            </form>
                        </div>
                    </details>

                    <!-- About Me Section -->
                    <details class="bg-gray-900/50 border border-green-500/30 rounded-lg backdrop-blur-sm">
                        <summary class="cursor-pointer px-6 py-4 text-lg font-bold text-green-400 hover:text-cyan-400">
                            About Me Section
                        </summary>
                        <div class="p-6 space-y-4">
                            <!-- List Badges -->
                            <% if(about) { %>
                            <div>
                                <p class="mb-2"><strong>Biography:</strong></p>
                                <p class="bg-gray-800/50 p-4 rounded"><%= about.bio %></p>
                            </div>
                            <div class="flex items-center space-x-4">
                                <% if(about.avatar){ %>
                                <img src="/<%= about.avatar %>" alt="Avatar" class="w-24 h-24 rounded-full object-cover" />
                                <% } %>
                                <div>
                                    <p><strong>Badges:</strong></p>
                                    <div class="flex flex-wrap space-2">
                                        <% about.badges.forEach(b => { %>
                                        <div class="flex items-center space-x-1 bg-gray-800/50 p-2 rounded m-1">
                                            <img src="/<%= b.badgeIcon %>" alt="<%= b.badgeName %>" class="w-6 h-6" />
                                            <span><%= b.badgeName %></span>
                                        </div>
                                        <% }) %>
                                    </div>
                                </div>
                            </div>
                            <div class="flex space-x-2">
                                <button onclick="populateAboutForm()" class="px-4 py-2 bg-yellow-600/20 border border-yellow-500 text-yellow-400 rounded hover:bg-yellow-600/40">Edit</button>
                                <form action="/admin/portfolio/about" method="POST" onsubmit="return confirm('Delete About Me?');">
                                    <input type="hidden" name="_method" value="DELETE" />
                                    <button type="submit" class="px-4 py-2 bg-red-600/20 border border-red-500 text-red-400 rounded hover:bg-red-600/40">Delete</button>
                                </form>
                            </div>
                            <% } %>

                            <!-- Form -->
                            <form id="about-form" class="space-y-4">
                                <div>
                                    <label class="block text-sm">Biography<span class="text-red-500">*</span></label>
                                    <textarea name="bio" rows="4" required class="w-full bg-gray-800/60 border border-gray-700 rounded p-2 focus:outline-none focus:border-green-400"><%= about?.bio || '' %></textarea>
                                </div>
                                <div>
                                    <label class="block text-sm">Avatar Image<span class="text-red-500">*</span></label>
                                    <input type="file" name="avatar" accept="image/*" onchange="previewImage(event,'about-avatar-preview')" class="w-full bg-gray-800/60 border border-gray-700 rounded p-2" />
                                    <img id="about-avatar-preview" class="mt-2 w-24 h-24 rounded-full object-cover hidden" />
                                </div>
                                <div id="badge-fields">
                                    <label class="block text-sm">Badges<span class="text-red-500">*</span></label>
                                    <% (about?.badges || [{badgeName:'',badgeIcon:''}]).forEach((b,i) => { %>
                                    <div class="flex items-center space-x-2 mb-2">
                                        <input type="text" name="badges[<%=i%>][badgeName]" value="<%= b.badgeName %>" placeholder="Badge Name" required class="bg-gray-800/60 border border-gray-700 rounded p-2 flex-1 focus:outline-none focus:border-green-400" />
                                        <input type="file" name="badges[<%=i%>][badgeIcon]" accept="image/*" onchange="previewImage(event,'badge-preview-<%=i%>')" required />
                                        <img id="badge-preview-<%=i%>" src="/<%= b.badgeIcon %>" class="w-6 h-6 object-contain <%= b.badgeIcon ? '' : 'hidden' %>" />
                                        <button type="button" onclick="removeBadge(this)" class="text-red-500">Ã—</button>
                                    </div>
                                    <% }) %>
                                </div>
                                <button type="button" onclick="addBadge()" class="text-cyan-400">+ Add Badge</button>
                                <button type="button" id="updateAboutBtn" class="px-6 py-2 bg-green-600/20 border border-green-500 text-green-400 rounded hover:bg-green-600/40">
                                    <%= about ? 'Update About' : 'Add About' %>
                                </button>
                            </form>
                        </div>
                    </details>

                    <!-- Projects Section -->
                    <details class="bg-gray-900/50 border border-green-500/30 rounded-lg backdrop-blur-sm">
                        <summary class="cursor-pointer px-6 py-4 text-lg font-bold text-green-400 hover:text-cyan-400">
                            Projects Section
                        </summary>
                        <div class="p-6 space-y-4">
                            <!-- Add New Project Button -->
                            <button type="button" onclick="showProjectForm()" class="px-4 py-2 bg-cyan-600/20 border border-cyan-500 text-cyan-400 rounded hover:bg-cyan-600/40">Add New Project</button>
                            <!-- Projects List -->
                            <div class="space-y-4">
                                <% projects?.forEach((p,i) => { %>
                                <div class="bg-gray-800/50 p-4 rounded border border-cyan-500 flex flex-col md:flex-row md:justify-between items-start md:items-center">
                                    <div>
                                        <h4 class="font-bold text-cyan-400"><%= p.title %></h4>
                                        <p class="text-gray-300"><%= p.description %></p>
                                        <div class="flex flex-wrap space-2 mt-2">
                                            <% p.techBadges.forEach(t => { %>
                                            <div class="flex items-center space-x-1 bg-gray-700/50 p-1 rounded m-1">
                                                <img src="/<%= t.badgeIcon %>" alt="<%= t.techName %>" class="w-4 h-4" />
                                                <span class="text-xs"><%= t.techName %></span>
                                            </div>
                                            <% }) %>
                                        </div>
                                    </div>
                                    <div class="mt-4 md:mt-0 flex space-x-2">
                                        <button onclick="editProject(<%=i%>)" class="px-3 py-1 bg-yellow-600/20 border border-yellow-500 text-yellow-400 rounded hover:bg-yellow-600/40">Edit</button>
                                        <form action="/admin/portfolio/projects/<%= p._id %>" method="POST" onsubmit="return confirm('Delete project?');">
                                            <input type="hidden" name="_method" value="DELETE" />
                                            <button type="submit" class="px-3 py-1 bg-red-600/20 border border-red-500 text-red-400 rounded hover:bg-red-600/40">Delete</button>
                                        </form>
                                    </div>
                                </div>
                                <% }) %>
                            </div>

                            <!-- Project Form (Hidden) -->
                            <form id="project-form" action="/admin/portfolio/projects" method="POST" enctype="multipart/form-data" class="space-y-4 hidden" onsubmit="return validateProject()">
                                <input type="hidden" name="_method" value="POST" />
                                <input type="hidden" name="projectIndex" />
                                <div>
                                    <label class="block text-sm">Project Title<span class="text-red-500">*</span></label>
                                    <input type="text" name="title" required class="w-full bg-gray-800/60 border border-gray-700 rounded p-2 focus:outline-none focus:border-cyan-400" />
                                </div>
                                <div>
                                    <label class="block text-sm">Description<span class="text-red-500">*</span></label>
                                    <textarea name="description" rows="3" required class="w-full bg-gray-800/60 border border-gray-700 rounded p-2 focus:outline-none focus:border-cyan-400"></textarea>
                                </div>
                                <div>
                                    <label class="block text-sm">Cover Image<span class="text-red-500">*</span></label>
                                    <input type="file" name="coverImage" accept="image/*" onchange="previewImage(event,'project-cover-preview')" required class="w-full" />
                                    <img id="project-cover-preview" class="mt-2 w-full max-w-xs h-auto object-contain hidden" />
                                </div>
                                <div id="tech-badge-fields">
                                    <label class="block text-sm">Tech Badges<span class="text-red-500">*</span></label>
                                    <div class="flex items-center space-x-2 mb-2">
                                        <input type="text" name="techBadges[0][techName]" placeholder="Tech Name" required class="bg-gray-800/60 border border-gray-700 rounded p-2 focus:outline-none focus:border-cyan-400 flex-1" />
                                        <input type="file" name="techBadges[0][badgeIcon]" accept="image/*" required onchange="previewImage(event,'tech-preview-0')" />
                                        <img id="tech-preview-0" class="w-6 h-6 object-contain hidden" />
                                        <button type="button" onclick="removeTech(this)" class="text-red-500">Ã—</button>
                                    </div>
                                </div>
                                <button type="button" onclick="addTech()" class="text-cyan-400">+ Add Tech Badge</button>
                                <button type="submit" class="px-6 py-2 bg-cyan-600/20 border border-cyan-500 text-cyan-400 rounded hover:bg-cyan-600/40">Save Project</button>
                            </form>
                        </div>
                    </details>

                    <!-- Skills Section -->
                    <details class="bg-gray-900/50 border border-green-500/30 rounded-lg backdrop-blur-sm">
                        <summary class="cursor-pointer px-6 py-4 text-lg font-bold text-green-400 hover:text-cyan-400">
                            Skills Section
                        </summary>
                        <div class="p-6 space-y-4">
                            <!-- Categories List -->
                            <div id="skill-categories" class="space-y-4">
                                <% skills?.forEach((cat,i) => { %>
                                <div class="bg-gray-800/50 p-4 rounded border border-green-500">
                                    <div class="flex justify-between items-center">
                                        <h4 class="font-bold text-green-400"><%= cat.category %></h4>
                                        <button onclick="removeCategory(<%=i%>)" class="text-red-500">Ã—</button>
                                    </div>
                                    <div class="mt-2 space-y-2">
                                        <% cat.items.forEach((s,j) => { %>
                                        <div class="flex items-center space-x-2">
                                            <input type="text" name="skills[<%=i%>][items][<%=j%>]" value="<%= s %>" required class="bg-gray-800/60 border border-gray-700 rounded p-2 flex-1 focus:outline-none focus:border-green-400" />
                                            <button type="button" onclick="removeSkill(this)" class="text-red-500">Ã—</button>
                                        </div>
                                        <% }) %>
                                        <button type="button" onclick="addSkill(this)" class="text-cyan-400">+ Add Skill</button>
                                    </div>
                                </div>
                                <% }) %>
                            </div>
                            <button type="button" onclick="addCategory()" class="text-cyan-400">+ Add Category</button>
                            <form action="/admin/portfolio/skills" method="POST" class="mt-4">
                                <button type="submit" class="px-6 py-2 bg-green-600/20 border border-green-500 text-green-400 rounded hover:bg-green-600/40">Save Skills</button>
                            </form>
                        </div>
                    </details>

                </div>
            </div>
        </div>
    </div>

    <%- include('partials/footer') %>

    <!-- Scripts for Preview & Form Logic -->
    <script src="/js/components/toast.js"></script>
    <script>
        // Image preview
        function previewImage(event, id) {
            const input = event.target;
            const preview = document.getElementById(id);
            if (input.files && input.files[0]) {
                const reader = new FileReader();
                reader.onload = e => {
                    preview.src = e.target.result;
                    preview.classList.remove('hidden');
                };
                reader.readAsDataURL(input.files[0]);
            }
        }
        // Intro Form populate
        function populateIntroForm() {
            document.getElementById('intro-form').scrollIntoView({ behavior: 'smooth' });
        }
        function validateIntro() {
            const form = document.getElementById('intro-form');
            const requiredFields = ['siteTitle', 'yourName', 'roles'];
            
            for (const field of requiredFields) {
                const input = form.querySelector(`[name="${field}"]`);
                if (!input.value.trim()) {
                    alert(`${field} is required`);
                    input.focus();
                    return false;
                }
            }
            
            // Validate roles
            const roles = form.querySelector('[name="roles"]').value.split(',').map(role => role.trim());
            if (roles.length === 0 || roles.some(role => !role)) {
                alert('At least one role is required');
                return false;
            }
            
            return true;
        }
        // About logic
        function populateAboutForm() { document.getElementById('about-form').scrollIntoView({ behavior: 'smooth' }); }
        function validateAbout() { return !!document.querySelector('#about-form [name="bio"]').value; }
        function addBadge() {
            const container = document.getElementById('badge-fields');
            const idx = container.querySelectorAll('input[type="text"]').length;
            const div = document.createElement('div');
            div.className = 'flex items-center space-x-2 mb-2';
            div.innerHTML = `
                <input type="text" name="badges[${idx}][badgeName]" placeholder="Badge Name" required class="bg-gray-800/60 border border-gray-700 rounded p-2 flex-1" />
                <input type="file" name="badges[${idx}][badgeIcon]" accept="image/*" onchange="previewImage(event,'badge-preview-${idx}')" required />
                <img id="badge-preview-${idx}" class="w-6 h-6 object-contain hidden" />
                <button type="button" onclick="removeBadge(this)" class="text-red-500">Ã—</button>
            `;
            container.appendChild(div);
        }
        function removeBadge(btn) { btn.parentElement.remove(); }
        // Projects logic
        function showProjectForm() { document.getElementById('project-form').classList.remove('hidden'); }
        function editProject(i) {
            const p = <%- JSON.stringify(projects) %>[i];
            const form = document.getElementById('project-form');
            form.action = `/admin/portfolio/projects/${p._id}`;
            form.querySelector('[name="_method"]').value = 'PUT';
            form.querySelector('[name="title"]').value = p.title;
            form.querySelector('[name="description"]').value = p.description;
            form.querySelector('[name="projectIndex"]').value = i;
            document.getElementById('tech-badge-fields').innerHTML = '';
            p.techBadges.forEach((t,j) => {
                const div = document.createElement('div');
                div.className = 'flex items-center space-x-2 mb-2';
                div.innerHTML = `
                    <input type="text" name="techBadges[${j}][techName]" value="${t.techName}" required class="bg-gray-800/60 border border-gray-700 rounded p-2 flex-1" />
                    <input type="file" name="techBadges[${j}][badgeIcon]" accept="image/*" onchange="previewImage(event,'tech-preview-${j}')" />
                    <img id="tech-preview-${j}" src="/${t.badgeIcon}" class="w-6 h-6 object-contain" />
                    <button type="button" onclick="removeTech(this)" class="text-red-500">Ã—</button>
                `;
                document.getElementById('tech-badge-fields').appendChild(div);
            });
            form.classList.remove('hidden'); form.scrollIntoView({ behavior: 'smooth' });
        }
        function addTech() {
            const container = document.getElementById('tech-badge-fields');
            const idx = container.querySelectorAll('input[type="text"]').length;
            const div = document.createElement('div');
            div.className = 'flex items-center space-x-2 mb-2';
            div.innerHTML = `
                <input type="text" name="techBadges[${idx}][techName]" placeholder="Tech Name" required class="bg-gray-800/60 border border-gray-700 rounded p-2 flex-1" />
                <input type="file" name="techBadges[${idx}][badgeIcon]" accept="image/*" onchange="previewImage(event,'tech-preview-${idx}')" required />
                <img id="tech-preview-${idx}" class="w-6 h-6 object-contain hidden" />
                <button type="button" onclick="removeTech(this)" class="text-red-500">Ã—</button>
            `;
            container.appendChild(div);
        }
        function removeTech(btn) { btn.parentElement.remove(); }
        function validateProject() { return !!document.querySelector('#project-form [name="title"]').value; }
        // Skills logic
        function addCategory() {
            const container = document.getElementById('skill-categories');
            const idx = container.children.length;
            const div = document.createElement('div'); div.className = 'bg-gray-800/50 p-4 rounded border border-green-500';
            div.innerHTML = `
                <div class="flex justify-between items-center">
                    <input type="text" name="skills[${idx}][category]" placeholder="Category Name" required class="bg-gray-800/60 border border-gray-700 rounded p-2 focus:outline-none flex-1" />
                    <button onclick="removeCategory(${idx})" class="text-red-500">Ã—</button>
                </div>
                <div class="mt-2 space-y-2">
                    <div class="flex items-center space-x-2">
                        <input type="text" name="skills[${idx}][items][0]" placeholder="Skill Name" required class="bg-gray-800/60 border border-gray-700 rounded p-2 flex-1" />
                        <button type="button" onclick="removeSkill(this)" class="text-red-500">Ã—</button>
                    </div>
                    <button type="button" onclick="addSkill(this)" class="text-cyan-400">+ Add Skill</button>
                </div>`;
            container.appendChild(div);
        }
        function removeCategory(i) { document.getElementById('skill-categories').children[i].remove(); }
        function addSkill(btn) {
            const parent = btn.closest('[border]');
            const idx = parent.querySelectorAll('input[type="text"]').length;
            const div = document.createElement('div'); div.className='flex items-center space-x-2';
            div.innerHTML = `<input type="text" name="skills[${[...parent.parentElement.children].indexOf(parent)}][items][${idx-1}]" placeholder="Skill Name" required class="bg-gray-800/60 border border-gray-700 rounded p-2 flex-1" /><button type="button" onclick="removeSkill(this)" class="text-red-500">Ã—</button>`;
            btn.before(div);
        }
        function removeSkill(btn) { btn.parentElement.remove(); }
        // Blog logic
        function showBlogForm() { document.getElementById('blog-form').classList.remove('hidden'); }
        function editPost(i) {
            const p = <%- JSON.stringify(posts) %>[i]; const form = document.getElementById('blog-form');
            form.action = `/admin/portfolio/posts/${p._id}`;
            form.querySelector('[name="_method"]').value='PUT';
            form.querySelector('[name="category"]').value=p.category;
            form.querySelector('[name="title"]').value=p.title;
            form.querySelector('[name="shortDesc"]').value=p.shortDesc;
            form.querySelector('[name="url"]').value=p.url;
            form.classList.remove('hidden'); form.scrollIntoView({ behavior: 'smooth' });
        }
        function validateBlog() { return !!document.querySelector('#blog-form [name="title"]').value; }

        // Matrix-style typing effect
        const matrixTyping = (text, element) => {
            const chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
            let iterations = 0;
            const maxIterations = 3;
            
            const interval = setInterval(() => {
                element.innerHTML = text
                    .split("")
                    .map((char, index) => {
                        if (index < iterations) {
                            return text[index];
                        }
                        return chars[Math.floor(Math.random() * chars.length)];
                    })
                    .join("");
                
                if (iterations >= text.length) {
                    clearInterval(interval);
                }
                
                iterations += 1 / maxIterations;
            }, 30);
        };

        // Show success toast
        const showHackerSuccess = (title, text) => {
            const toast = document.createElement('div');
            toast.className = 'toast toast-success';
            toast.innerHTML = `
                <div class="toast-content">
                    <span class="toast-icon">[+]</span>
                    <div>
                        <div class="toast-message">${title}</div>
                        <div id="matrix-text">${text}</div>
                    </div>
                </div>
            `;
            
            document.getElementById('toast-container').appendChild(toast);
            matrixTyping(text, toast.querySelector('#matrix-text'));
            
            // Remove toast after animation
            setTimeout(() => {
                toast.remove();
            }, 5000);
        };

        // Show error toast
        const showHackerError = (title, text) => {
            const toast = document.createElement('div');
            toast.className = 'toast toast-error';
            toast.innerHTML = `
                <div class="toast-content">
                    <span class="toast-icon">[!]</span>
                    <div>
                        <div class="toast-message">${title}</div>
                        <div id="matrix-text">${text}</div>
                    </div>
                </div>
            `;
            
            document.getElementById('toast-container').appendChild(toast);
            matrixTyping(text, toast.querySelector('#matrix-text'));
            
            // Remove toast after animation
            setTimeout(() => {
                toast.remove();
            }, 5000);
        };

        // Update the button click handler
        document.getElementById('updateIntroBtn').addEventListener('click', async function(e) {
            e.preventDefault();
            
            const form = document.getElementById('intro-form');
            const formData = new FormData(form);
            
            // Validate form
            const requiredFields = ['siteTitle', 'yourName', 'roles'];
            for (const field of requiredFields) {
                const input = form.querySelector(`[name="${field}"]`);
                if (!input.value.trim()) {
                    window.toast.error(
                        'VALIDATION ERROR',
                        `FIELD "${field.toUpperCase()}" REQUIRED`
                    );
                    input.focus();
                    return;
                }
            }
            
            // Validate roles
            const roles = form.querySelector('[name="roles"]').value.split(',').map(role => role.trim());
            if (roles.length === 0 || roles.some(role => !role)) {
                window.toast.error(
                    'VALIDATION ERROR',
                    'AT LEAST ONE ROLE REQUIRED'
                );
                return;
            }
            
            try {
                console.log('Sending request to /api/portfolio/intro');
                const response = await fetch('/api/portfolio/intro', {
                    method: 'POST',
                    body: formData
                });
                
                console.log('Response received:', response);
                const result = await response.json();
                console.log('Result:', result);
                
                if (response.ok) {
                    window.toast.success(
                        'OPERATION SUCCESSFUL',
                        'INTRO DATA UPDATED SUCCESSFULLY'
                    );
                    // Reload the page after a short delay
                    setTimeout(() => {
                        window.location.reload();
                    }, 1500);
                } else {
                    window.toast.error(
                        'OPERATION FAILED',
                        result.message || 'UNKNOWN ERROR OCCURRED'
                    );
                }
            } catch (error) {
                console.error('Error:', error);
                window.toast.error(
                    'SYSTEM ERROR',
                    'FAILED TO COMMUNICATE WITH SERVER'
                );
            }
        });

        document.getElementById('updateAboutBtn').addEventListener('click', async function(e) {
            e.preventDefault();
            
            const form = document.getElementById('about-form');
            const formData = new FormData(form);
            
            // Validate form
            const bio = form.querySelector('[name="bio"]');
            if (!bio.value.trim()) {
                window.toast.error(
                    'VALIDATION ERROR',
                    'BIOGRAPHY IS REQUIRED'
                );
                bio.focus();
                return;
            }
            
            try {
                console.log('Sending request to /api/portfolio/about');
                const response = await fetch('/api/portfolio/about', {
                    method: 'POST',
                    body: formData
                });
                
                console.log('Response received:', response);
                const result = await response.json();
                console.log('Result:', result);
                
                if (response.ok) {
                    window.toast.success(
                        'OPERATION SUCCESSFUL',
                        'ABOUT SECTION UPDATED SUCCESSFULLY'
                    );
                    // Reload the page after a short delay
                    setTimeout(() => {
                        window.location.reload();
                    }, 1500);
                } else {
                    window.toast.error(
                        'OPERATION FAILED',
                        result.message || 'UNKNOWN ERROR OCCURRED'
                    );
                }
            } catch (error) {
                console.error('Error:', error);
                window.toast.error(
                    'SYSTEM ERROR',
                    'FAILED TO COMMUNICATE WITH SERVER'
                );
            }
        });
    </script>

    <!-- Add this in the head section or before the closing </head> tag -->
    <style>
        @keyframes matrix-typing {
            0% { opacity: 0; transform: translateY(-20px); }
            100% { opacity: 1; transform: translateY(0); }
        }

        @keyframes matrix-fade {
            0% { opacity: 1; }
            80% { opacity: 1; }
            100% { opacity: 0; }
        }

        .toast {
            background: rgba(0, 0, 0, 0.9);
            border: 1px solid;
            padding: 1rem;
            margin-bottom: 0.5rem;
            border-radius: 4px;
            font-family: 'Courier New', monospace;
            position: relative;
            overflow: hidden;
            animation: matrix-typing 0.3s ease-out, matrix-fade 5s ease-in-out forwards;
        }

        .toast::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 2px;
            background: currentColor;
            animation: matrix-scan 2s linear infinite;
        }

        .toast-success {
            border-color: #00ff00;
            color: #00ff00;
            box-shadow: 0 0 10px rgba(0, 255, 0, 0.3);
        }

        .toast-error {
            border-color: #ff0000;
            color: #ff0000;
            box-shadow: 0 0 10px rgba(255, 0, 0, 0.3);
        }

        @keyframes matrix-scan {
            0% { transform: translateX(-100%); }
            100% { transform: translateX(100%); }
        }

        .toast-content {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .toast-icon {
            font-size: 1.2rem;
        }

        .toast-message {
            font-size: 0.9rem;
            text-transform: uppercase;
        }
    </style>
</body>
